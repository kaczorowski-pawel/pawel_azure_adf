{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "pawekaczDataFactory"
		},
		"AzureDataLakeService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeService'"
		},
		"AzureSynapsService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapsService'"
		},
		"AzureDataLakeService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pawelkaczstorage2.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/01_copy_csv_to_parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFromDataLake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSVDataToCopy",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "StoresInParquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSVDataToCopy')]",
				"[concat(variables('factoryId'), '/datasets/StoresInParquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/03_stores_from_csv_to_sql_pool')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyStoresToSqlPool",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "01_copy_to_sql_pol",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Stores": {},
									"AsaSqlPool": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureDataLakeService",
									"type": "LinkedServiceReference"
								},
								"folderPath": "pawelkacz2/staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/01_copy_to_sql_pol')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVDataToCopy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Stores_2.csv",
						"folderPath": "contoso_sales",
						"fileSystem": "pawelkacz2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "StoreKey",
						"type": "String"
					},
					{
						"name": "GeographyKey",
						"type": "String"
					},
					{
						"name": "StoreType",
						"type": "String"
					},
					{
						"name": "StoreName",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "CloseReason",
						"type": "String"
					},
					{
						"name": "EmployeeCount",
						"type": "String"
					},
					{
						"name": "SellingAreaSize",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StoresInParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "parquet",
						"fileSystem": "pawelkacz2"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Correlationid",
						"type": "UTF8"
					},
					{
						"name": "Operationname",
						"type": "UTF8"
					},
					{
						"name": "Status",
						"type": "UTF8"
					},
					{
						"name": "Eventcategory",
						"type": "UTF8"
					},
					{
						"name": "Level",
						"type": "UTF8"
					},
					{
						"name": "Time",
						"type": "UTF8"
					},
					{
						"name": "Subscription",
						"type": "UTF8"
					},
					{
						"name": "Eventinitiatedby",
						"type": "UTF8"
					},
					{
						"name": "Resourcetype",
						"type": "UTF8"
					},
					{
						"name": "Resourcegroup",
						"type": "UTF8"
					},
					{
						"name": "Resource",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/asa_sql_pool')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapsService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "StoreKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GeographyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StoreName",
						"type": "varchar"
					},
					{
						"name": "Status_name",
						"type": "varchar"
					},
					{
						"name": "CloseReason",
						"type": "varchar"
					},
					{
						"name": "EmployeeCount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellingArea",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Contoso_stores"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapsService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapsService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapsService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_copy_to_sql_pol')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CSVDataToCopy",
								"type": "DatasetReference"
							},
							"name": "Stores"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "asa_sql_pool",
								"type": "DatasetReference"
							},
							"name": "AsaSqlPool"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          StoreKey as string,",
						"          GeographyKey as string,",
						"          StoreType as string,",
						"          StoreName as string,",
						"          Status as string,",
						"          CloseReason as string,",
						"          EmployeeCount as string,",
						"          SellingAreaSize as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Stores",
						"Stores sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          StoreKey as integer,",
						"          GeographyKey as integer,",
						"          StoreName as string,",
						"          Status_name as string,",
						"          CloseReason as string,",
						"          EmployeeCount as integer,",
						"          SellingArea as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          StoreKey,",
						"          GeographyKey,",
						"          StoreName,",
						"          Status_name = Status,",
						"          CloseReason,",
						"          EmployeeCount,",
						"          SellingArea = SellingAreaSize",
						"     )) ~> AsaSqlPool"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSVDataToCopy')]",
				"[concat(variables('factoryId'), '/datasets/asa_sql_pool')]"
			]
		}
	]
}